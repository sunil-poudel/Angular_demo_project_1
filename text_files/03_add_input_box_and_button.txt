‚úÖ Step 3: Add Input Box and Button
We‚Äôll add:

  -> An input box where the user types a city name

  -> A button to "Search"

  -> A simple variable in your component to store the city

üßë‚Äçüíª 1. Update weather.component.html
Replace everything with this:

    <h2>Check the weather</h2>

    <input [(ngModel)]="city" placeholder="Enter city name" />
    <button (click)="getWeather()">Search</button>

    <p *ngIf="city">You entered: {{ city }}</p>

üß† What This Does
    [(ngModel)]="city" two-way binds input value to the city variable

    (click)="getWeather()" runs a function when the button is clicked

    {{ city }} shows what the user typed

    *ngIf="city" only shows the line if city is not empty

    ->> again:
        üîπ<input [(ngModel)]="city" placeholder="Enter city name" />
        This is an input field where the user types a city name.

        [(ngModel)]="city" does two-way data binding:

        It binds the input field to a variable named city in your TypeScript component.

        If the user types something, it updates the city variable.

        If the variable city changes in the code, it updates the input field too.

        placeholder="Enter city name" shows light text inside the box until the user types something.

        üî∏ For this to work, don‚Äôt forget to import FormsModule in your AppModule.

üõ† 2. Add Logic to weather.component.ts
Open src/app/weather/weather.component.ts and update it:

    import { Component } from '@angular/core';

    @Component({
      selector: 'app-weather',
      templateUrl: './weather.component.html',
      styleUrls: ['./weather.component.css']
    })
    export class WeatherComponent {
      city: string = '';

      getWeather() {
        console.log("Getting weather for:", this.city);
      }
    }

‚ö†Ô∏è 3. Enable FormsModule
To use [(ngModel)], you must import FormsModule in app.module.ts.

Open src/app/app.module.ts and: (create new if doesn't exist and add codes given at last of this file).

Add this at the top:
  import { FormsModule } from '@angular/forms';

Add FormsModule to the imports array:
    @NgModule({
      declarations: [
        AppComponent,
        WeatherComponent
      ],
      imports: [
        BrowserModule,
        FormsModule
      ],
      providers: [],
      bootstrap: [AppComponent]
    })
‚úÖ Now Try It
Type a city like London

Click "Search"

You should see "You entered: London" and the console shows the log


Note: inside app.module.ts
        import { NgModule } from '@angular/core';
        import { BrowserModule } from '@angular/platform-browser';
        import { FormsModule } from '@angular/forms';

        import { AppComponent } from './app.component';
        import { WeatherComponent } from './weather/weather.component';

        @NgModule({
          declarations: [
            AppComponent,
            WeatherComponent
          ],
          imports: [
            BrowserModule,
            FormsModule
          ],
          providers: [],
          bootstrap: [AppComponent]
        })
        export class AppModule { }










